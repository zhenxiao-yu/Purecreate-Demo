import { FiDownload, FiRefreshCw } from "react-icons/fi";
import state from "../../store"; // Assuming these are globally accessible
import { DecalTypes } from "../../constants/decalTypes.js";

export const AIResult = ({
                             image,         // Base64-encoded image string
                             onRegenerate,  // Function to regenerate the image
                             onDownload,    // Function to download the image
                         }) => {
    const handleDecalClick = (type) => {
        if (!image) {
            alert("No image to apply");
            return;
        }

        const { stateProperty } = DecalTypes[type];

        // Update the global state with the provided image
        state[stateProperty] = image; // image is already Base64-encoded
    };

    const downloadImage = () => {
        if (!image) {
            alert("No image to download");
            return;
        }

        const link = document.createElement("a");
        link.href = image; // Use the Base64 image directly
        link.download = "ai-generated-image.png";
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    };

    return (
        <div className="ai-picker-result">
            <div className="ai-picker-image-wrapper">
                {image ? (
                    <img
                        src={image} // Base64 image as `src`
                        alt="Generated by AI"
                        className="ai-picker-image"
                    />
                ) : (
                    <div className="ai-picker-placeholder">
                        <p>No image available</p>
                    </div>
                )}
                <div className="ai-picker-image-icons">
                    <button
                        onClick={onRegenerate}
                        aria-label="Regenerate Image"
                        className="icon-button"
                    >
                        <FiRefreshCw size={20} />
                    </button>
                    <button
                        onClick={downloadImage}
                        aria-label="Download Image"
                        className="icon-button"
                    >
                        <FiDownload size={20} />
                    </button>
                </div>
            </div>
            <div className="ai-picker-custom-buttons">
                {["frontLogo", "backLogo", "full"].map((type) => (
                    <button
                        key={type}
                        onClick={() => handleDecalClick(type)}
                        className="custom-button"
                        aria-label={`Apply to ${type}`}
                    >
                        {type === "frontLogo" ? "Front" : type === "backLogo" ? "Back" : "Texture"}
                    </button>
                ))}
            </div>
        </div>
    );
};
